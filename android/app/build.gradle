def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    defaultConfig {
        // 指定您自己唯一的应用程序ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.ytx222.novel_app3"
        minSdkVersion 18
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: 为发布版本添加您自己的签名配置。
            // 现在使用调试键签名，因此“flutter run --release”可以工作。
            signingConfig signingConfigs.debug
            // resValue "string", "app_name", "novel_app"
        }
          debug {
            // resValue "string", "app_name", "novel_debug"
        }
    }
}

flutter {
    source '../..'
}

dependencies {

    modules {
        module("com.tencent:mmkv") {
            replacedBy("com.tencent:mmkv-static", "Using mmkv-static for flutter")
        }
    }
}
